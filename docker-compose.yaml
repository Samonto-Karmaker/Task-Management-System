version: "3.8"

services:
  # Frontend service
  frontend:
    build:
      context: ./client  # Ensure to use the relative path for the frontend directory
      dockerfile: Dockerfile.client  # Ensure this matches the Dockerfile in the frontend directory
    ports:
      - "3000:3000"  # Expose frontend on port 3000
    depends_on:
      - backend

  # Backend service
  backend:
    build:
      context: ./server  # Ensure to use the relative path for the backend directory
      dockerfile: Dockerfile.server  # Ensure this matches the Dockerfile in the backend directory
    ports:
      - "5000:5000"  # Expose backend on port 5000
    depends_on:
      - postgres
      - redis  # Ensure Redis is started before the backend
    env_file:
      - ./server/.env  # Path to the backend .env file

  # PostgreSQL database service
  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: ${DB_USER}  # Ensure these variables are set in the .env file
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - ./server/.env  # Path to the backend .env file

    # Redis service
  redis:
    image: redis:alpine  # Use Redis Alpine version for a lightweight Redis container
    ports:
      - "6379:6379"  # Expose Redis on port 6379
    volumes:
      - redis_data:/data  # Optionally, store Redis data in a volume

volumes:
  postgres_data:
  redis_data:  # Redis data volume for persistence

