generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String         @id @default(uuid())
  email              String         @unique
  name               String
  password           String
  isBlocked          Boolean        @default(false)
  mustChangePassword Boolean        @default(false)
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  notifications      Notification[]
  assignedTasks      Task[]         @relation("assignee")
  createdTasks       Task[]         @relation("assigner")
  role               Role           @relation(fields: [roleId], references: [id])
  roleId             String

  @@index([email]) // Index on email for quick lookups by email
  @@index([roleId]) // Index on roleId for quick lookups by role
}

model Task {
  id          String     @id @default(uuid())
  title       String
  description String
  priority    Priority
  status      TaskStatus @default(PENDING)
  deadline    DateTime
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  assignerId  String
  assigneeId  String
  assignee    User       @relation("assignee", fields: [assigneeId], references: [id])
  assigner    User       @relation("assigner", fields: [assignerId], references: [id])

  @@index([assignerId]) // Index on assignerId for quick lookups by assigner
  @@index([assigneeId]) // Index on assigneeId for quick lookups by assignee
  @@index([status]) // Index on status for quick filtering by task status
  @@index([priority]) // Index on priority for quick filtering by task priority
}

model Notification {
  id        String           @id @default(uuid())
  content   String
  type      NotificationType @default(IN_APP)
  isRead    Boolean          @default(false)
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  sendToId  String
  sendTo    User             @relation(fields: [sendToId], references: [id])

  @@index([sendToId]) // Index on sendToId for quick lookups by recipient
  @@index([createdAt]) // Index on createdAt for quick sorting/filtering by creation date
}

model Role {
  id          String       @id @default(uuid())
  name        String       @unique
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  users       User[]
  permissions Permission[] @relation("RolePermissions")

  @@index([name]) // Index on name for quick lookups by role name
}

model Permission {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  roles     Role[]   @relation("RolePermissions")

  @@index([name]) // Index on name for quick lookups by permission name
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
}

enum NotificationType {
  EMAIL
  IN_APP
  SCHEDULED
}
